// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$b1-name: 'b1';
$b1-x: 1541px;
$b1-y: 775px;
$b1-offset-x: -1541px;
$b1-offset-y: -775px;
$b1-width: 428px;
$b1-height: 202px;
$b1-total-width: 2119px;
$b1-total-height: 1591px;
$b1-image: '../img/sprite.png';
$b1: (1541px, 775px, -1541px, -775px, 428px, 202px, 2119px, 1591px, '../img/sprite.png', 'b1', );
$b2-name: 'b2';
$b2-x: 351px;
$b2-y: 170px;
$b2-offset-x: -351px;
$b2-offset-y: -170px;
$b2-width: 394px;
$b2-height: 192px;
$b2-total-width: 2119px;
$b2-total-height: 1591px;
$b2-image: '../img/sprite.png';
$b2: (351px, 170px, -351px, -170px, 394px, 192px, 2119px, 1591px, '../img/sprite.png', 'b2', );
$b3-name: 'b3';
$b3-x: 745px;
$b3-y: 362px;
$b3-offset-x: -745px;
$b3-offset-y: -362px;
$b3-width: 403px;
$b3-height: 175px;
$b3-total-width: 2119px;
$b3-total-height: 1591px;
$b3-image: '../img/sprite.png';
$b3: (745px, 362px, -745px, -362px, 403px, 175px, 2119px, 1591px, '../img/sprite.png', 'b3', );
$b4-name: 'b4';
$b4-x: 1148px;
$b4-y: 537px;
$b4-offset-x: -1148px;
$b4-offset-y: -537px;
$b4-width: 393px;
$b4-height: 238px;
$b4-total-width: 2119px;
$b4-total-height: 1591px;
$b4-image: '../img/sprite.png';
$b4: (1148px, 537px, -1148px, -537px, 393px, 238px, 2119px, 1591px, '../img/sprite.png', 'b4', );
$b5-name: 'b5';
$b5-x: 0px;
$b5-y: 0px;
$b5-offset-x: 0px;
$b5-offset-y: 0px;
$b5-width: 351px;
$b5-height: 170px;
$b5-total-width: 2119px;
$b5-total-height: 1591px;
$b5-image: '../img/sprite.png';
$b5: (0px, 0px, 0px, 0px, 351px, 170px, 2119px, 1591px, '../img/sprite.png', 'b5', );
$sprite-icons-name: 'sprite_icons';
$sprite-icons-x: 1969px;
$sprite-icons-y: 977px;
$sprite-icons-offset-x: -1969px;
$sprite-icons-offset-y: -977px;
$sprite-icons-width: 150px;
$sprite-icons-height: 614px;
$sprite-icons-total-width: 2119px;
$sprite-icons-total-height: 1591px;
$sprite-icons-image: '../img/sprite.png';
$sprite-icons: (1969px, 977px, -1969px, -977px, 150px, 614px, 2119px, 1591px, '../img/sprite.png', 'sprite_icons', );
$spritesheet-width: 2119px;
$spritesheet-height: 1591px;
$spritesheet-image: '../img/sprite.png';
$spritesheet-sprites: ($b1, $b2, $b3, $b4, $b5, $sprite-icons, );
$spritesheet: (2119px, 1591px, '../img/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
